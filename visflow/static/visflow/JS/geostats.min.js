<!DOCTYPE html>
<html lang="en" class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>geostats/geostats.min.js at master Â· simogeo/geostats</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="simogeo/geostats" name="twitter:title" /><meta content="geostats - a tiny and standalone javascript library for classification and basic statistics" name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/154323?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/154323?v=2&amp;s=400" property="og:image" /><meta content="simogeo/geostats" property="og:title" /><meta content="https://github.com/simogeo/geostats" property="og:url" /><meta content="geostats - a tiny and standalone javascript library for classification and basic statistics" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="81FC46AF:0875:327684C0:5400A7D7" name="octolytics-dimension-request_id" /><meta content="760032" name="octolytics-actor-id" /><meta content="huhugravity" name="octolytics-actor-login" /><meta content="fd40c9b67cda223415318ae6b8820b4f0d52e1acaaef854929fab559df608dec" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="Yz6SorYocWJqNzHD9uW2u36PrrTczGoYEvcwD9CkJDeO+S7xSS8AYLYeDchQguclbgM4GVTcdK+5farIlGqjJQ==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-b0d261d9daea876eb9bd0ca4fcd51ab6c7acff7c.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-746bf792d0833cec36a7a291fe8ee7108cb09ad7.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="06238b2b987d01446d70b465435c7337">

      
  <meta name="description" content="geostats - a tiny and standalone javascript library for classification and basic statistics">
  <meta name="go-import" content="github.com/simogeo/geostats git https://github.com/simogeo/geostats.git">

  <meta content="154323" name="octolytics-dimension-user_id" /><meta content="simogeo" name="octolytics-dimension-user_login" /><meta content="1910036" name="octolytics-dimension-repository_id" /><meta content="simogeo/geostats" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="1910036" name="octolytics-dimension-repository_network_root_id" /><meta content="simogeo/geostats" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/simogeo/geostats/commits/master.atom" rel="alternate" title="Recent Commits to geostats:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search">
          <form accept-charset="UTF-8" action="/simogeo/geostats/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/simogeo/geostats/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left">
        <li class="header-nav-item explore" data-ga-click="Header, go to explore, text:explore">
          <a class="header-nav-link" href="/explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/huhugravity" data-ga-click="Header, go to profile, text:username">
      <img alt="Hu" class="avatar" data-user="760032" height="20" src="https://avatars1.githubusercontent.com/u/760032?v=2&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">huhugravity</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="simogeo/geostats">This repository</span>
    </li>
      <li>
        <a href="/simogeo/geostats/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="MruCt692GwL4QV5kDg1ruChT0z3N2F5PiQrEBl36QS6V7j7qgqeVwHIqyzelJ+I4HqLF9vZgplG9OgV5zG4F1w==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="b5JX9cFMoS/EQzY38OYCf1LQ8XrOv98oAMJezx6uwJqodLpXHNyD7T3g1xJesTHXn0RMCGak3cPS1cKnu/Cf4g==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="1910036" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/simogeo/geostats/watchers">
        2
      </a>
      <a href="/simogeo/geostats/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/simogeo/geostats/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="d/m5YaxmyUkWAS/JL+ZA4kBe4Luj9Tip2CkHJVkZpU+Zg/sJWnaO6TW16OHyF/6QZOl2ssYQVpAJnLUfGhHkRA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar simogeo/geostats">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/simogeo/geostats/stargazers">
          40
        </a>
</form>
    <form accept-charset="UTF-8" action="/simogeo/geostats/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="fGXsWpDBsLd6L217cTSC68SrYPTQ/NSwUjt0G171yUNYrxN1pkZJM1Qy5n+GEkv+ZqgzZmFwL9d9O9TwI+DGrw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star simogeo/geostats">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/simogeo/geostats/stargazers">
          40
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/simogeo/geostats/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of simogeo/geostats to your account" aria-label="Fork your own copy of simogeo/geostats to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/simogeo/geostats/network" class="social-count">13</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/simogeo" class="url fn" itemprop="url" rel="author"><span itemprop="title">simogeo</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/simogeo/geostats" class="js-current-repository js-repo-home-link">geostats</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/simogeo/geostats/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/simogeo/geostats" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /simogeo/geostats">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/simogeo/geostats/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /simogeo/geostats/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/simogeo/geostats/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /simogeo/geostats/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/simogeo/geostats/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /simogeo/geostats/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/simogeo/geostats/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /simogeo/geostats/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/simogeo/geostats/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /simogeo/geostats/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/simogeo/geostats.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/simogeo/geostats.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:simogeo/geostats.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:simogeo/geostats.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/simogeo/geostats" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/simogeo/geostats" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="github-windows://openRepo/https://github.com/simogeo/geostats" class="minibutton sidebar-button" title="Save simogeo/geostats to your computer and use it in GitHub Desktop." aria-label="Save simogeo/geostats to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/simogeo/geostats/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download simogeo/geostats as a zip file"
                   title="Download simogeo/geostats as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/simogeo/geostats/blob/d8f4f8c4bd3961e6edbc1a3096e77a96a72d9aa7/lib/geostats.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:f07413193b6e7e2bab996a97f59636c5 -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/blob/master/lib/geostats.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v1.2.0/lib/geostats.min.js"
                 data-name="v1.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0">v1.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v1.1.0/lib/geostats.min.js"
                 data-name="v1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.0">v1.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v1.0.0/lib/geostats.min.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v0.9/lib/geostats.min.js"
                 data-name="v0.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9">v0.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v0.8/lib/geostats.min.js"
                 data-name="v0.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.8">v0.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v0.7/lib/geostats.min.js"
                 data-name="v0.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.7">v0.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/simogeo/geostats/tree/v0.6/lib/geostats.min.js"
                 data-name="v0.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.6">v0.6</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/simogeo/geostats/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="lib/geostats.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/simogeo/geostats" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">geostats</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/simogeo/geostats/tree/master/lib" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><strong class="final-path">geostats.min.js</strong>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/simogeo/geostats/contributors/master/lib/geostats.min.js">
    <div class="file-history-tease-header">
      Fetching contributors&hellip;
    </div>

    <div class="participation">
      <p class="loader-loading"><img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>24 lines (23 sloc)</span>
          <span class="meta-divider"></span>
        <span>11.463 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/simogeo/geostats/raw/master/lib/geostats.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/simogeo/geostats/blame/master/lib/geostats.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/simogeo/geostats/commits/master/lib/geostats.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="github-windows://openRepo/https://github.com/simogeo/geostats?branch=master&amp;filepath=lib%2Fgeostats.min.js" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/simogeo/geostats/edit/master/lib/geostats.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/simogeo/geostats/delete/master/lib/geostats.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">k</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">geostats</span><span class="o">=</span><span class="nx">k</span><span class="p">()})(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">==</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)};</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;&quot;this&quot; is null or not defined&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=+</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kc">Infinity</span><span class="o">===</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">));</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">});</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">objectId</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">legendSeparator</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="o">=</span><span class="s2">&quot; - &quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">precisionflag</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">debug</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">is_uniqueValues</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">inner_ranges</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">colors</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_pop</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_min</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_max</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_median</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_mean</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sorted</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">objectID</span><span class="o">+</span><span class="s2">&quot;(object id) :: &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Setting bounds (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;) : &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">setSerie</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Setting serie (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;) : &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setPrecision</span><span class="p">()};</span><span class="k">this</span><span class="p">.</span><span class="nx">setColors</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Setting color ramp (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;) : &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">colors</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">doCount</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClass</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">++</span><span class="p">}}};</span><span class="k">this</span><span class="p">.</span><span class="nx">setPrecision</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precisionflag</span><span class="o">=</span><span class="s2">&quot;manual&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;auto&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">precisionflag</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||-</span><span class="mi">1</span><span class="o">==</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="o">=</span><span class="nx">b</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Calling setPrecision(). Mode : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">precisionflag</span><span class="o">+</span><span class="s2">&quot; - Decimals : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">decimalFormat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">decimalFormat</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]};</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_min</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_max</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">sum</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sum</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">stat_sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sum</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_sum</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_pop</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_pop</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_pop</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_mean</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_mean</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sum</span><span class="p">()</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">())),</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_mean</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">median</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_median</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_median</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_median</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">]))</span><span class="o">/</span><span class="mi">2</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_median</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">variance</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">round</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">round</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">(),</span><span class="mi">2</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="nx">round</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_variance</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="k">typeof</span> <span class="nx">a</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">variance</span><span class="p">()),</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_stddev</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">cov</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">()</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">roundlength</span><span class="p">))),</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_cov</span><span class="p">};</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Error. You should first enter a serie!&quot;</span><span class="p">),</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasNegativeValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasZeroValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">[</span><span class="nx">i</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sorted</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stat_sorted</span><span class="o">=!</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">is_uniqueValues</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">(),</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">}));</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stat_sorted</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">info</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;Population : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; - [Min : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; | Max : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;]\n&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;Mean : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; - Median : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">median</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">+=</span><span class="s2">&quot;Variance : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">variance</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; - Standard deviation : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; - Coefficient of variation : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">cov</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;\n&quot;</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">setClassManually</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">()</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">()){</span><span class="nx">a</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="nx">alert</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;Given bounds may not be correct! please check your input.\nMin value : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot; / Max value : &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">();</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;manual classification (&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassEqInterval</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">())</span><span class="o">/</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">+=</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;eq. intervals (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getQuantiles</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">()</span><span class="o">/</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="p">.</span><span class="mi">49</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">])}</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassQuantile</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getQuantiles</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;quantile (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassStdDeviation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="o">%</span><span class="mi">2</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line"><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">()</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">()</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">()</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">()</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mean</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">(),</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stddev</span><span class="p">(),</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">();</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;std deviation (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassGeometricProgression</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">())</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasNegativeValue</span><span class="p">()</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasZeroValue</span><span class="p">())</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;geometric progression can&#39;t be applied with a serie containing negative or zero values.&quot;</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">LN10</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;geometric progression (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassArithmeticProgression</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nx">i</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">()</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;arithmetic progression (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassJenks</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="nx">dataList</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kc">Infinity</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="nx">m</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">dataList</span><span class="p">[</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">h</span><span class="o">/</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">!=</span><span class="nx">p</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">l</span><span class="p">]</span><span class="o">&gt;=</span><span class="nx">g</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="nx">l</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="nx">l</span><span class="o">-</span><span class="mi">1</span><span class="p">])}</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="nx">g</span><span class="o">=</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">dataList</span><span class="p">[</span><span class="nx">dataList</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">dataList</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="mi">2</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">;)</span><span class="nx">f</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">-</span><span class="mi">2</span><span class="p">),</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">dataList</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">d</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="o">-=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setBounds</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setRanges</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;Jenks (&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; classes)&quot;</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line"><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassUniqueValues</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_nodata</span><span class="p">()){</span><span class="k">this</span><span class="p">.</span><span class="nx">is_uniqueValues</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;unique values&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getClass</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">is_uniqueValues</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span><span class="k">return</span> <span class="nx">i</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;Unable to get value&#39;s class.&quot;</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getRangeNum</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="sr">/ - /</span><span class="p">),</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">getInnerRanges</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">inner_ranges</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">inner_ranges</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">i</span><span class="p">)</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">&gt;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">c</span><span class="o">++</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">inner_ranges</span><span class="o">=</span><span class="nx">a</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">getSortedlist</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)};</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">getHtmlLegend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doCount</span><span class="p">();</span><span class="nx">ccolors</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">colors</span><span class="p">;</span><span class="nx">lg</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;Legend&quot;</span><span class="p">;</span><span class="nx">getcounter</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="nx">fn</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;default&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;discontinuous&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getInnerRanges</span><span class="p">(),</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">0</span><span class="p">))){</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;Geostats cannot apply &#39;discontinuous&#39; mode to the getHtmlLegend() method because some classes are not populated.\nPlease switch to &#39;default&#39; or &#39;distinct&#39; modes. Exit!&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ccolors</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;The number of colors should fit the number of ranges. Exit!&quot;</span><span class="p">);</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="s1">&#39;&lt;div class=&quot;geostats-legend&quot;&gt;&lt;div class=&quot;geostats-legend-title&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">lg</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">is_uniqueValues</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">getcounter</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39; &lt;span class=&quot;geostats-legend-counter&quot;&gt;(&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&lt;/span&gt;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ranges</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]).</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">),</span><span class="s2">&quot;distinct&quot;</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!=</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">))),</span><span class="s2">&quot;discontinuous&quot;</span><span class="o">==</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">inner_ranges</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">separator</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]).</span><span class="nx">toFixed</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">precision</span><span class="p">)),</span><span class="nx">b</span><span class="o">=</span><span class="nx">fn</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">legendSeparator</span><span class="o">+</span><span class="nx">fn</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">+=</span><span class="s1">&#39;&lt;div&gt;&lt;div class=&quot;geostats-legend-block&quot; style=&quot;background-color:&#39;</span><span class="o">+</span><span class="nx">ccolors</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;/div&gt; &#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="mi">0</span><span class="o">===</span><span class="nx">getcounter</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="s1">&#39; &lt;span class=&quot;geostats-legend-counter&quot;&gt;(&#39;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">counter</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&lt;/span&gt;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">fn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bounds</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="nx">a</span><span class="o">+=</span><span class="s1">&#39;&lt;div&gt;&lt;div class=&quot;geostats-legend-block&quot; style=&quot;background-color:&#39;</span><span class="o">+</span><span class="nx">ccolors</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">+</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="s1">&#39;&quot;&gt;&lt;/div&gt; &#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">}};</span><span class="k">this</span><span class="p">.</span><span class="nx">objectID</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getUTCMilliseconds</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Creating new geostats object&quot;</span><span class="p">);</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">setPrecision</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Setting serie (&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;) : &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">()))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">serie</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">getJenks</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassJenks</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getGeometricProgression</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassGeometricProgression</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getEqInterval</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassEqInterval</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getQuantile</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassQuantile</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getStdDeviation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassStdDeviation</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getUniqueValues</span><span class="o">=</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="k">this</span><span class="p">.</span><span class="nx">getClassUniqueValues</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getArithmeticProgression</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getClassArithmeticProgression</span><span class="p">}});</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.12460s from github-fe126-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-bc28a4f6b05fd6cd91bbc92310bbbc53e54c6ec2.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-4243df0e5ce6aba593337dddeaadd3cc429a00ec.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

