(function(){var ss={};if(typeof module!=="undefined")module.exports=ss;else this.ss=ss;function linear_regression(){var linreg={},data=[];linreg.data=function(x){if(!arguments.length)return data;data=x.slice();return linreg};linreg.mb=function(){var m,b;var data_length=data.length;if(data_length===1){m=0;b=data[0][1]}else{var sum_x=0,sum_y=0,sum_xx=0,sum_xy=0;var point,x,y;for(var i=0;i<data_length;i++){point=data[i];x=point[0];y=point[1];sum_x+=x;sum_y+=y;sum_xx+=x*x;sum_xy+=x*y}m=(data_length*sum_xy-
sum_x*sum_y)/(data_length*sum_xx-sum_x*sum_x);b=sum_y/data_length-m*sum_x/data_length}return{m:m,b:b}};linreg.m=function(){return linreg.mb().m};linreg.b=function(){return linreg.mb().b};linreg.line=function(){var mb=linreg.mb(),m=mb.m,b=mb.b;return function(x){return b+m*x}};return linreg}function r_squared(data,f){if(data.length<2)return 1;var sum=0,average;for(var i=0;i<data.length;i++)sum+=data[i][1];average=sum/data.length;var sum_of_squares=0;for(var j=0;j<data.length;j++)sum_of_squares+=Math.pow(average-
data[j][1],2);var err=0;for(var k=0;k<data.length;k++)err+=Math.pow(data[k][1]-f(data[k][0]),2);return 1-err/sum_of_squares}function bayesian(){var bayes_model={},total_count=0,data={};bayes_model.train=function(item,category){if(!data[category])data[category]={};for(var k in item){var v=item[k];if(data[category][k]===undefined)data[category][k]={};if(data[category][k][v]===undefined)data[category][k][v]=0;data[category][k][item[k]]++}total_count++};bayes_model.score=function(item){var odds={},category;
for(var k in item){var v=item[k];for(category in data){if(odds[category]===undefined)odds[category]={};if(data[category][k])odds[category][k+"_"+v]=(data[category][k][v]||0)/total_count;else odds[category][k+"_"+v]=0}}var odds_sums={};for(category in odds)for(var combination in odds[category]){if(odds_sums[category]===undefined)odds_sums[category]=0;odds_sums[category]+=odds[category][combination]}return odds_sums};return bayes_model}function sum(x){var value=0;for(var i=0;i<x.length;i++)value+=x[i];
return value}function mean(x){if(x.length===0)return null;return sum(x)/x.length}function geometric_mean(x){if(x.length===0)return null;var value=1;for(var i=0;i<x.length;i++){if(x[i]<=0)return null;value*=x[i]}return Math.pow(value,1/x.length)}function harmonic_mean(x){if(x.length===0)return null;var reciprocal_sum=0;for(var i=0;i<x.length;i++){if(x[i]<=0)return null;reciprocal_sum+=1/x[i]}return x.length/reciprocal_sum}function root_mean_square(x){if(x.length===0)return null;var sum_of_squares=
0;for(var i=0;i<x.length;i++)sum_of_squares+=Math.pow(x[i],2);return Math.sqrt(sum_of_squares/x.length)}function min(x){var value;for(var i=0;i<x.length;i++)if(x[i]<value||value===undefined)value=x[i];return value}function max(x){var value;for(var i=0;i<x.length;i++)if(x[i]>value||value===undefined)value=x[i];return value}function variance(x){if(x.length===0)return null;var mean_value=mean(x),deviations=[];for(var i=0;i<x.length;i++)deviations.push(Math.pow(x[i]-mean_value,2));return mean(deviations)}
function standard_deviation(x){if(x.length===0)return null;return Math.sqrt(variance(x))}function sum_nth_power_deviations(x,n){var mean_value=mean(x),sum=0;for(var i=0;i<x.length;i++)sum+=Math.pow(x[i]-mean_value,n);return sum}function sample_variance(x){if(x.length<=1)return null;var sum_squared_deviations_value=sum_nth_power_deviations(x,2);return sum_squared_deviations_value/(x.length-1)}function sample_standard_deviation(x){if(x.length<=1)return null;return Math.sqrt(sample_variance(x))}function sample_covariance(x,
y){if(x.length<=1||x.length!=y.length)return null;var xmean=mean(x),ymean=mean(y),sum=0;for(var i=0;i<x.length;i++)sum+=(x[i]-xmean)*(y[i]-ymean);return sum/(x.length-1)}function sample_correlation(x,y){var cov=sample_covariance(x,y),xstd=sample_standard_deviation(x),ystd=sample_standard_deviation(y);if(cov===null||xstd===null||ystd===null)return null;return cov/xstd/ystd}function median(x){if(x.length===0)return null;var sorted=x.slice().sort(function(a,b){return a-b});if(sorted.length%2===1)return sorted[(sorted.length-
1)/2];else{var a=sorted[sorted.length/2-1];var b=sorted[sorted.length/2];return(a+b)/2}}function mode(x){if(x.length===0)return null;else if(x.length===1)return x[0];var sorted=x.slice().sort(function(a,b){return a-b});var last=sorted[0],value,max_seen=0,seen_this=1;for(var i=1;i<sorted.length+1;i++)if(sorted[i]!==last){if(seen_this>max_seen){max_seen=seen_this;value=last}seen_this=1;last=sorted[i]}else seen_this++;return value}function t_test(sample,x){var sample_mean=mean(sample);var sd=standard_deviation(sample);
var rootN=Math.sqrt(sample.length);return(sample_mean-x)/(sd/rootN)}function t_test_two_sample(sample_x,sample_y,difference){var n=sample_x.length,m=sample_y.length;if(!n||!m)return null;if(!difference)difference=0;var meanX=mean(sample_x),meanY=mean(sample_y);var weightedVariance=((n-1)*sample_variance(sample_x)+(m-1)*sample_variance(sample_y))/(n+m-2);return(meanX-meanY-difference)/Math.sqrt(weightedVariance*(1/n+1/m))}function chunk(sample,chunkSize){var output=[];if(chunkSize<=0)return null;for(var start=
0;start<sample.length;start+=chunkSize)output.push(sample.slice(start,start+chunkSize));return output}function shuffle_in_place(sample,randomSource){randomSource=randomSource||Math.random;var length=sample.length;var temporary;var index;while(length>0){index=Math.floor(randomSource()*length--);temporary=sample[length];sample[length]=sample[index];sample[index]=temporary}return sample}function shuffle(sample,randomSource){sample=sample.slice();return shuffle_in_place(sample.slice(),randomSource)}function sample(array,
n,randomSource){var shuffled=shuffle(array,randomSource);return shuffled.slice(0,n)}function quantile(sample,p){if(sample.length===0)return null;var sorted=sample.slice().sort(function(a,b){return a-b});if(p.length){var results=[];for(var i=0;i<p.length;i++)results[i]=quantile_sorted(sorted,p[i]);return results}else return quantile_sorted(sorted,p)}function quantile_sorted(sample,p){var idx=sample.length*p;if(p<0||p>1)return null;else if(p===1)return sample[sample.length-1];else if(p===0)return sample[0];
else if(idx%1!==0)return sample[Math.ceil(idx)-1];else if(sample.length%2===0)return(sample[idx-1]+sample[idx])/2;else return sample[idx]}function iqr(sample){if(sample.length===0)return null;return quantile(sample,.75)-quantile(sample,.25)}function mad(x){if(!x||x.length===0)return null;var median_value=median(x),median_absolute_deviations=[];for(var i=0;i<x.length;i++)median_absolute_deviations.push(Math.abs(x[i]-median_value));return median(median_absolute_deviations)}function jenksMatrices(data,
n_classes){var lower_class_limits=[],variance_combinations=[],i,j,variance=0;for(i=0;i<data.length+1;i++){var tmp1=[],tmp2=[];for(j=0;j<n_classes+1;j++){tmp1.push(0);tmp2.push(0)}lower_class_limits.push(tmp1);variance_combinations.push(tmp2)}for(i=1;i<n_classes+1;i++){lower_class_limits[1][i]=1;variance_combinations[1][i]=0;for(j=2;j<data.length+1;j++)variance_combinations[j][i]=Infinity}for(var l=2;l<data.length+1;l++){var sum=0,sum_squares=0,w=0,i4=0;for(var m=1;m<l+1;m++){var lower_class_limit=
l-m+1,val=data[lower_class_limit-1];w++;sum+=val;sum_squares+=val*val;variance=sum_squares-sum*sum/w;i4=lower_class_limit-1;if(i4!==0)for(j=2;j<n_classes+1;j++)if(variance_combinations[l][j]>=variance+variance_combinations[i4][j-1]){lower_class_limits[l][j]=lower_class_limit;variance_combinations[l][j]=variance+variance_combinations[i4][j-1]}}lower_class_limits[l][1]=1;variance_combinations[l][1]=variance}return{lower_class_limits:lower_class_limits,variance_combinations:variance_combinations}}function jenksBreaks(data,
lower_class_limits,n_classes){var k=data.length-1,kclass=[],countNum=n_classes;kclass[n_classes]=data[data.length-1];kclass[0]=data[0];while(countNum>1){kclass[countNum-1]=data[lower_class_limits[k][countNum]-2];k=lower_class_limits[k][countNum]-1;countNum--}return kclass}function jenks(data,n_classes){if(n_classes>data.length)return null;data=data.slice().sort(function(a,b){return a-b});var matrices=jenksMatrices(data,n_classes),lower_class_limits=matrices.lower_class_limits;return jenksBreaks(data,
lower_class_limits,n_classes)}function sample_skewness(x){if(x.length<3)return null;var n=x.length,cubed_s=Math.pow(sample_standard_deviation(x),3),sum_cubed_deviations=sum_nth_power_deviations(x,3);return n*sum_cubed_deviations/((n-1)*(n-2)*cubed_s)}var standard_normal_table=[.5,.504,.508,.512,.516,.5199,.5239,.5279,.5319,.5359,.5398,.5438,.5478,.5517,.5557,.5596,.5636,.5675,.5714,.5753,.5793,.5832,.5871,.591,.5948,.5987,.6026,.6064,.6103,.6141,.6179,.6217,.6255,.6293,.6331,.6368,.6406,.6443,.648,
.6517,.6554,.6591,.6628,.6664,.67,.6736,.6772,.6808,.6844,.6879,.6915,.695,.6985,.7019,.7054,.7088,.7123,.7157,.719,.7224,.7257,.7291,.7324,.7357,.7389,.7422,.7454,.7486,.7517,.7549,.758,.7611,.7642,.7673,.7704,.7734,.7764,.7794,.7823,.7852,.7881,.791,.7939,.7967,.7995,.8023,.8051,.8078,.8106,.8133,.8159,.8186,.8212,.8238,.8264,.8289,.8315,.834,.8365,.8389,.8413,.8438,.8461,.8485,.8508,.8531,.8554,.8577,.8599,.8621,.8643,.8665,.8686,.8708,.8729,.8749,.877,.879,.881,.883,.8849,.8869,.8888,.8907,.8925,
.8944,.8962,.898,.8997,.9015,.9032,.9049,.9066,.9082,.9099,.9115,.9131,.9147,.9162,.9177,.9192,.9207,.9222,.9236,.9251,.9265,.9279,.9292,.9306,.9319,.9332,.9345,.9357,.937,.9382,.9394,.9406,.9418,.9429,.9441,.9452,.9463,.9474,.9484,.9495,.9505,.9515,.9525,.9535,.9545,.9554,.9564,.9573,.9582,.9591,.9599,.9608,.9616,.9625,.9633,.9641,.9649,.9656,.9664,.9671,.9678,.9686,.9693,.9699,.9706,.9713,.9719,.9726,.9732,.9738,.9744,.975,.9756,.9761,.9767,.9772,.9778,.9783,.9788,.9793,.9798,.9803,.9808,.9812,
.9817,.9821,.9826,.983,.9834,.9838,.9842,.9846,.985,.9854,.9857,.9861,.9864,.9868,.9871,.9875,.9878,.9881,.9884,.9887,.989,.9893,.9896,.9898,.9901,.9904,.9906,.9909,.9911,.9913,.9916,.9918,.992,.9922,.9925,.9927,.9929,.9931,.9932,.9934,.9936,.9938,.994,.9941,.9943,.9945,.9946,.9948,.9949,.9951,.9952,.9953,.9955,.9956,.9957,.9959,.996,.9961,.9962,.9963,.9964,.9965,.9966,.9967,.9968,.9969,.997,.9971,.9972,.9973,.9974,.9974,.9975,.9976,.9977,.9977,.9978,.9979,.9979,.998,.9981,.9981,.9982,.9982,.9983,
.9984,.9984,.9985,.9985,.9986,.9986,.9987,.9987,.9987,.9988,.9988,.9989,.9989,.9989,.999,.999];function cumulative_std_normal_probability(z){var absZ=Math.abs(z),row=Math.floor(absZ*10),column=10*(Math.floor(absZ*100)/10-Math.floor(absZ*100/10)),index=Math.min(row*10+column,standard_normal_table.length-1);if(z>=0)return standard_normal_table[index];else return+(1-standard_normal_table[index]).toFixed(4)}function z_score(x,mean,standard_deviation){return(x-mean)/standard_deviation}var epsilon=1E-4;
function factorial(n){if(n<0)return null;var accumulator=1;for(var i=2;i<=n;i++)accumulator*=i;return accumulator}function bernoulli_distribution(p){if(p<0||p>1)return null;return binomial_distribution(1,p)}function binomial_distribution(trials,probability){if(probability<0||probability>1||trials<=0||trials%1!==0)return null;function probability_mass(x,trials,probability){return factorial(trials)/(factorial(x)*factorial(trials-x))*(Math.pow(probability,x)*Math.pow(1-probability,trials-x))}var x=0,
cumulative_probability=0,cells={};do{cells[x]=probability_mass(x,trials,probability);cumulative_probability+=cells[x];x++}while(cumulative_probability<1-epsilon);return cells}function poisson_distribution(lambda){if(lambda<=0)return null;var x=0,cumulative_probability=0,cells={};function probability_mass(x,lambda){return Math.pow(Math.E,-lambda)*Math.pow(lambda,x)/factorial(x)}do{cells[x]=probability_mass(x,lambda);cumulative_probability+=cells[x];x++}while(cumulative_probability<1-epsilon);return cells}
var chi_squared_distribution_table={1:{"0.995":0,"0.99":0,"0.975":0,"0.95":0,"0.9":.02,"0.5":.45,"0.1":2.71,"0.05":3.84,"0.025":5.02,"0.01":6.63,"0.005":7.88},2:{"0.995":.01,"0.99":.02,"0.975":.05,"0.95":.1,"0.9":.21,"0.5":1.39,"0.1":4.61,"0.05":5.99,"0.025":7.38,"0.01":9.21,"0.005":10.6},3:{"0.995":.07,"0.99":.11,"0.975":.22,"0.95":.35,"0.9":.58,"0.5":2.37,"0.1":6.25,"0.05":7.81,"0.025":9.35,"0.01":11.34,"0.005":12.84},4:{"0.995":.21,"0.99":.3,"0.975":.48,"0.95":.71,"0.9":1.06,"0.5":3.36,"0.1":7.78,
"0.05":9.49,"0.025":11.14,"0.01":13.28,"0.005":14.86},5:{"0.995":.41,"0.99":.55,"0.975":.83,"0.95":1.15,"0.9":1.61,"0.5":4.35,"0.1":9.24,"0.05":11.07,"0.025":12.83,"0.01":15.09,"0.005":16.75},6:{"0.995":.68,"0.99":.87,"0.975":1.24,"0.95":1.64,"0.9":2.2,"0.5":5.35,"0.1":10.65,"0.05":12.59,"0.025":14.45,"0.01":16.81,"0.005":18.55},7:{"0.995":.99,"0.99":1.25,"0.975":1.69,"0.95":2.17,"0.9":2.83,"0.5":6.35,"0.1":12.02,"0.05":14.07,"0.025":16.01,"0.01":18.48,"0.005":20.28},8:{"0.995":1.34,"0.99":1.65,"0.975":2.18,
"0.95":2.73,"0.9":3.49,"0.5":7.34,"0.1":13.36,"0.05":15.51,"0.025":17.53,"0.01":20.09,"0.005":21.96},9:{"0.995":1.73,"0.99":2.09,"0.975":2.7,"0.95":3.33,"0.9":4.17,"0.5":8.34,"0.1":14.68,"0.05":16.92,"0.025":19.02,"0.01":21.67,"0.005":23.59},10:{"0.995":2.16,"0.99":2.56,"0.975":3.25,"0.95":3.94,"0.9":4.87,"0.5":9.34,"0.1":15.99,"0.05":18.31,"0.025":20.48,"0.01":23.21,"0.005":25.19},11:{"0.995":2.6,"0.99":3.05,"0.975":3.82,"0.95":4.57,"0.9":5.58,"0.5":10.34,"0.1":17.28,"0.05":19.68,"0.025":21.92,"0.01":24.72,
"0.005":26.76},12:{"0.995":3.07,"0.99":3.57,"0.975":4.4,"0.95":5.23,"0.9":6.3,"0.5":11.34,"0.1":18.55,"0.05":21.03,"0.025":23.34,"0.01":26.22,"0.005":28.3},13:{"0.995":3.57,"0.99":4.11,"0.975":5.01,"0.95":5.89,"0.9":7.04,"0.5":12.34,"0.1":19.81,"0.05":22.36,"0.025":24.74,"0.01":27.69,"0.005":29.82},14:{"0.995":4.07,"0.99":4.66,"0.975":5.63,"0.95":6.57,"0.9":7.79,"0.5":13.34,"0.1":21.06,"0.05":23.68,"0.025":26.12,"0.01":29.14,"0.005":31.32},15:{"0.995":4.6,"0.99":5.23,"0.975":6.27,"0.95":7.26,"0.9":8.55,
"0.5":14.34,"0.1":22.31,"0.05":25,"0.025":27.49,"0.01":30.58,"0.005":32.8},16:{"0.995":5.14,"0.99":5.81,"0.975":6.91,"0.95":7.96,"0.9":9.31,"0.5":15.34,"0.1":23.54,"0.05":26.3,"0.025":28.85,"0.01":32,"0.005":34.27},17:{"0.995":5.7,"0.99":6.41,"0.975":7.56,"0.95":8.67,"0.9":10.09,"0.5":16.34,"0.1":24.77,"0.05":27.59,"0.025":30.19,"0.01":33.41,"0.005":35.72},18:{"0.995":6.26,"0.99":7.01,"0.975":8.23,"0.95":9.39,"0.9":10.87,"0.5":17.34,"0.1":25.99,"0.05":28.87,"0.025":31.53,"0.01":34.81,"0.005":37.16},
19:{"0.995":6.84,"0.99":7.63,"0.975":8.91,"0.95":10.12,"0.9":11.65,"0.5":18.34,"0.1":27.2,"0.05":30.14,"0.025":32.85,"0.01":36.19,"0.005":38.58},20:{"0.995":7.43,"0.99":8.26,"0.975":9.59,"0.95":10.85,"0.9":12.44,"0.5":19.34,"0.1":28.41,"0.05":31.41,"0.025":34.17,"0.01":37.57,"0.005":40},21:{"0.995":8.03,"0.99":8.9,"0.975":10.28,"0.95":11.59,"0.9":13.24,"0.5":20.34,"0.1":29.62,"0.05":32.67,"0.025":35.48,"0.01":38.93,"0.005":41.4},22:{"0.995":8.64,"0.99":9.54,"0.975":10.98,"0.95":12.34,"0.9":14.04,
"0.5":21.34,"0.1":30.81,"0.05":33.92,"0.025":36.78,"0.01":40.29,"0.005":42.8},23:{"0.995":9.26,"0.99":10.2,"0.975":11.69,"0.95":13.09,"0.9":14.85,"0.5":22.34,"0.1":32.01,"0.05":35.17,"0.025":38.08,"0.01":41.64,"0.005":44.18},24:{"0.995":9.89,"0.99":10.86,"0.975":12.4,"0.95":13.85,"0.9":15.66,"0.5":23.34,"0.1":33.2,"0.05":36.42,"0.025":39.36,"0.01":42.98,"0.005":45.56},25:{"0.995":10.52,"0.99":11.52,"0.975":13.12,"0.95":14.61,"0.9":16.47,"0.5":24.34,"0.1":34.28,"0.05":37.65,"0.025":40.65,"0.01":44.31,
"0.005":46.93},26:{"0.995":11.16,"0.99":12.2,"0.975":13.84,"0.95":15.38,"0.9":17.29,"0.5":25.34,"0.1":35.56,"0.05":38.89,"0.025":41.92,"0.01":45.64,"0.005":48.29},27:{"0.995":11.81,"0.99":12.88,"0.975":14.57,"0.95":16.15,"0.9":18.11,"0.5":26.34,"0.1":36.74,"0.05":40.11,"0.025":43.19,"0.01":46.96,"0.005":49.65},28:{"0.995":12.46,"0.99":13.57,"0.975":15.31,"0.95":16.93,"0.9":18.94,"0.5":27.34,"0.1":37.92,"0.05":41.34,"0.025":44.46,"0.01":48.28,"0.005":50.99},29:{"0.995":13.12,"0.99":14.26,"0.975":16.05,
"0.95":17.71,"0.9":19.77,"0.5":28.34,"0.1":39.09,"0.05":42.56,"0.025":45.72,"0.01":49.59,"0.005":52.34},30:{"0.995":13.79,"0.99":14.95,"0.975":16.79,"0.95":18.49,"0.9":20.6,"0.5":29.34,"0.1":40.26,"0.05":43.77,"0.025":46.98,"0.01":50.89,"0.005":53.67},40:{"0.995":20.71,"0.99":22.16,"0.975":24.43,"0.95":26.51,"0.9":29.05,"0.5":39.34,"0.1":51.81,"0.05":55.76,"0.025":59.34,"0.01":63.69,"0.005":66.77},50:{"0.995":27.99,"0.99":29.71,"0.975":32.36,"0.95":34.76,"0.9":37.69,"0.5":49.33,"0.1":63.17,"0.05":67.5,
"0.025":71.42,"0.01":76.15,"0.005":79.49},60:{"0.995":35.53,"0.99":37.48,"0.975":40.48,"0.95":43.19,"0.9":46.46,"0.5":59.33,"0.1":74.4,"0.05":79.08,"0.025":83.3,"0.01":88.38,"0.005":91.95},70:{"0.995":43.28,"0.99":45.44,"0.975":48.76,"0.95":51.74,"0.9":55.33,"0.5":69.33,"0.1":85.53,"0.05":90.53,"0.025":95.02,"0.01":100.42,"0.005":104.22},80:{"0.995":51.17,"0.99":53.54,"0.975":57.15,"0.95":60.39,"0.9":64.28,"0.5":79.33,"0.1":96.58,"0.05":101.88,"0.025":106.63,"0.01":112.33,"0.005":116.32},90:{"0.995":59.2,
"0.99":61.75,"0.975":65.65,"0.95":69.13,"0.9":73.29,"0.5":89.33,"0.1":107.57,"0.05":113.14,"0.025":118.14,"0.01":124.12,"0.005":128.3},100:{"0.995":67.33,"0.99":70.06,"0.975":74.22,"0.95":77.93,"0.9":82.36,"0.5":99.33,"0.1":118.5,"0.05":124.34,"0.025":129.56,"0.01":135.81,"0.005":140.17}};function chi_squared_goodness_of_fit(data,distribution_type,significance){var input_mean=mean(data),chi_squared=0,degrees_of_freedom,c=1,hypothesized_distribution=distribution_type(input_mean),observed_frequencies=
[],expected_frequencies=[],k;for(var i=0;i<data.length;i++){if(observed_frequencies[data[i]]===undefined)observed_frequencies[data[i]]=0;observed_frequencies[data[i]]++}for(i=0;i<observed_frequencies.length;i++)if(observed_frequencies[i]===undefined)observed_frequencies[i]=0;for(k in hypothesized_distribution)if(k in observed_frequencies)expected_frequencies[k]=hypothesized_distribution[k]*data.length;for(k=expected_frequencies.length-1;k>=0;k--)if(expected_frequencies[k]<3){expected_frequencies[k-
1]+=expected_frequencies[k];expected_frequencies.pop();observed_frequencies[k-1]+=observed_frequencies[k];observed_frequencies.pop()}for(k=0;k<observed_frequencies.length;k++)chi_squared+=Math.pow(observed_frequencies[k]-expected_frequencies[k],2)/expected_frequencies[k];degrees_of_freedom=observed_frequencies.length-c-1;return chi_squared_distribution_table[degrees_of_freedom][significance]<chi_squared}function mixin(array){var support=!!(Object.defineProperty&&Object.defineProperties);if(!support)throw new Error("without defineProperty, simple-statistics cannot be mixed in");
var arrayMethods=["median","standard_deviation","sum","sample_skewness","mean","min","max","quantile","geometric_mean","harmonic_mean","root_mean_square"];function wrap(method){return function(){var args=Array.prototype.slice.apply(arguments);args.unshift(this);return ss[method].apply(ss,args)}}var extending;if(array)extending=array.slice();else extending=Array.prototype;for(var i=0;i<arrayMethods.length;i++)Object.defineProperty(extending,arrayMethods[i],{value:wrap(arrayMethods[i]),configurable:true,
enumerable:false,writable:true});return extending}ss.linear_regression=linear_regression;ss.standard_deviation=standard_deviation;ss.r_squared=r_squared;ss.median=median;ss.mean=mean;ss.mode=mode;ss.min=min;ss.max=max;ss.sum=sum;ss.quantile=quantile;ss.quantile_sorted=quantile_sorted;ss.iqr=iqr;ss.mad=mad;ss.chunk=chunk;ss.shuffle=shuffle;ss.shuffle_in_place=shuffle_in_place;ss.sample=sample;ss.sample_covariance=sample_covariance;ss.sample_correlation=sample_correlation;ss.sample_variance=sample_variance;
ss.sample_standard_deviation=sample_standard_deviation;ss.sample_skewness=sample_skewness;ss.geometric_mean=geometric_mean;ss.harmonic_mean=harmonic_mean;ss.root_mean_square=root_mean_square;ss.variance=variance;ss.t_test=t_test;ss.t_test_two_sample=t_test_two_sample;ss.jenksMatrices=jenksMatrices;ss.jenksBreaks=jenksBreaks;ss.jenks=jenks;ss.bayesian=bayesian;ss.epsilon=epsilon;ss.factorial=factorial;ss.bernoulli_distribution=bernoulli_distribution;ss.binomial_distribution=binomial_distribution;ss.poisson_distribution=
poisson_distribution;ss.chi_squared_goodness_of_fit=chi_squared_goodness_of_fit;ss.z_score=z_score;ss.cumulative_std_normal_probability=cumulative_std_normal_probability;ss.standard_normal_table=standard_normal_table;ss.average=mean;ss.interquartile_range=iqr;ss.mixin=mixin;ss.median_absolute_deviation=mad;ss.rms=root_mean_square})(this);
